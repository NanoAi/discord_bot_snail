generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  guildId     String
  xp          Int
  roles       String[] // List of roles
  lastMessage DateTime
  warnings    String[]

  @@unique([userId, guildId], name: "uuid")
  @@map("users") // Map to "users" collection
}

model Guild {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String   @unique
  cases     Case[]
  xpSystem  Boolean // Whether XP system is enabled
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("guilds")
}

model Case {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId     String   @db.ObjectId
  caseId      Int      @default(0)
  status      Int      @default(0)
  resolution  String   @default("")
  description String   @default("")
  users       String[]
  tickets     Ticket[]
  warnings    Action[] @relation("warns")
  bans        Action[] @relation("bans") // List of banned user IDs
  mutes       Action[] @relation("mutes") // List of muted user IDs
  guild       Guild    @relation(fields: [guildId], references: [id])

  @@unique([guildId, caseId], name: "uuid")
  @@map("cases")
}

model Action {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId    String   @db.ObjectId
  issuer     String
  reason     String
  expiration DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  warnedIn Case @relation(name: "warns", fields: [guildId], references: [id])
  bannedIn Case @relation(name: "bans", fields: [guildId], references: [id])
  mutedIn  Case @relation(name: "mutes", fields: [guildId], references: [id])

  @@map("actions")
}

model Ticket {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId     String   @db.ObjectId
  ticketId    Int
  creatorId   String
  ticketTitle String
  ticketTag   Int // Status of the ticket (e.g., open, closed)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  case        Case     @relation(fields: [guildId], references: [id])

  @@map("tickets")
}
